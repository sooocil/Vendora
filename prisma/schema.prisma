generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum SubscriptionPlan {
  BASE
  PLUS
  PRO
}

model User {
  id              String  @id @default(cuid())
  fullName        String?
  username        String  @unique
  email           String  @unique
  panNo           String?
  storeName       String?
  citizenshipNo   String?
  location        String?
  isEmailVerified Boolean @default(false)
  isVerified      Boolean @default(false)

  //Vendor Payment Thing 
  isPaid           Boolean           @default(false)
  trialStart       DateTime?
  trialEnd         DateTime?
  subscriptionId   String?
  subscriptionPlan SubscriptionPlan? @default(BASE)

  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Session           Session[]
  Subscription      Subscription[]
  RegistrationEmail RegistrationEmail[]
}

model RegistrationEmail {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  email     String
  storeName String?
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Subscription {
  id        String           @id @default(cuid())
  userId    String
  user      User             @relation(fields: [userId], references: [id])
  plan      SubscriptionPlan
  status    String
  startedAt DateTime         @default(now())
  expiresAt DateTime?
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

model Session {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model product {
  id          String   @id @default(cuid())
  name        String
  description String
  price       Float
  stock       Int
  sales       Int?
  picture     String?
  pageno      Int
  category    String?
  colors      String[]
  ratings     Float?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
